apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
spec:
  replicas: 2
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      initContainers:
        - name: postgres-migration
          image: postgres-migration
          imagePullPolicy: IfNotPresent
          env:
            - name: PRISMA_DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: api-secret
                  key: postgres.url
      containers:
        - name: api
          image: graphql-api
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          resources:
            limits:
              cpu: "2"
              memory: "8Gi"
          livenessProbe:
            httpGet:
              path: /graphql/health
              port: 8080
            initialDelaySeconds: 5
          readinessProbe:
            httpGet:
              path: /graphql/ready
              port: 8080
            initialDelaySeconds: 5
          env:
            - name: ENABLE_GRAPHIQL
              valueFrom:
                configMapKeyRef:
                  name: api-configmap
                  key: enable_graphiql
            - name: ENABLE_INTROSPECTION
              valueFrom:
                configMapKeyRef:
                  name: api-configmap
                  key: enable_graphql_introspection

            - name: IXGYOHN_BASE_URL
              valueFrom:
                configMapKeyRef:
                  name: api-configmap
                  key: ixgyohn.baseUrl

            - name: SOUNDCLOUD_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: api-secret
                  key: soundcloud.clientId
            # Postgres
            - name: PRISMA_DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: api-secret
                  key: postgres.url
            # Meilisearch
            - name: MEILISEARCH_URL
              valueFrom:
                secretKeyRef:
                  name: api-secret
                  key: meilisearch.url
            # Neo4j
            - name: NEO4J_URL
              valueFrom:
                secretKeyRef:
                  name: api-secret
                  key: neo4j.url
            - name: NEO4J_USERNAME
              valueFrom:
                secretKeyRef:
                  name: api-secret
                  key: neo4j.username
            - name: NEO4J_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: api-secret
                  key: neo4j.password
            # Redis
            - name: REDIS_URL
              value: "redis://localhost:6379"
            # Auth0
            - name: AUTH0_DOMAIN
              valueFrom:
                secretKeyRef:
                  name: api-secret
                  key: auth0.domain
            - name: AUTH0_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: api-secret
                  key: auth0.clientId
            - name: AUTH0_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: api-secret
                  key: auth0.clientSecret
            - name: AUTH0_ADMIN_ROLE_ID
              valueFrom:
                secretKeyRef:
                  name: api-secret
                  key: auth0.roleIds.admin
            - name: AUTH0_EDITOR_ROLE_ID
              valueFrom:
                secretKeyRef:
                  name: api-secret
                  key: auth0.roleIds.editor
            # Nicochuu
            - name: NICOCHUU_BASE_URL
              value: "http://nicochuu:58080"
        - name: redis
          image: redis:7.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 6379
          resources:
            limits:
              cpu: "1"
              memory: "256Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: api
spec:
  type: ClusterIP
  selector:
    app: api
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 8080
    - name: https
      protocol: TCP
      port: 443
      targetPort: 8080
